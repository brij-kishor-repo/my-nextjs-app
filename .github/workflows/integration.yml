name: CI/CD Pipeline for NextJs App

on:
  push:
    branches:
      - dev
      - qa
      - uat
      - main
  pull_request:
    branches:
      - dev
      - qa
      - uat
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Deploy to EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "ap-south-1"
          BRANCH_NAME: ${{ github.ref_name }}
          EC2_DEV_DNS: ${{ secrets.EC2_DEV_DNS }}
          EC2_QA_DNS: ${{ secrets.EC2_QA_DNS }}
          EC2_STAGE_DNS: ${{ secrets.EC2_STAGE_DNS }}
          EC2_PROD_DNS: ${{ secrets.EC2_PROD_DNS }}
          DEPLOY_PATH_DEV: "/var/www/dev"
          DEPLOY_PATH_QA: "/var/www/qa"
          DEPLOY_PATH_STAGE: "/var/www"
          DEPLOY_PATH_PROD: "/var/www"

        run: |
          # Determine branch and set corresponding DNS and deploy path
          if [ "${BRANCH_NAME}" == "dev" ]; then
            SERVER_DNS="${EC2_DEV_DNS}"
            DEPLOY_PATH="${DEPLOY_PATH_DEV}"
          elif [ "${BRANCH_NAME}" == "qa" ]; then
            SERVER_DNS="${EC2_QA_DNS}"
            DEPLOY_PATH="${DEPLOY_PATH_QA}"
          elif [ "${BRANCH_NAME}" == "uat" ]; then
            SERVER_DNS="${EC2_STAGE_DNS}"
            DEPLOY_PATH="${DEPLOY_PATH_STAGE}"
          elif [ "${BRANCH_NAME}" == "main" ]; then
            SERVER_DNS="${EC2_PROD_DNS}"
            DEPLOY_PATH="${DEPLOY_PATH_PROD}"
          fi

          mkdir -p /home/ec2-user/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > /home/ec2-user/.ssh/github_actions_key
          chmod 600 /home/ec2-user/.ssh/github_actions_key

          # Check if the host is already in known_hosts
          if ! ssh-keygen -F "${SERVER_DNS}" > /dev/null; then
            ssh-keyscan -H "${SERVER_DNS}" >> /home/ec2-user/.ssh/known_hosts
          else
            echo "Host key already in known_hosts."
          fi

          # SSH into EC2 instance and deploy
          ssh -i /home/ec2-user/.ssh/github_actions_key ec2-user@${SERVER_DNS} << EOF
            set -e
            cd ${DEPLOY_PATH}
            git fetch origin
            git reset --hard origin/${BRANCH_NAME}
            npm ci --production
            npm run build
            pm2 restart nextjs-app-${BRANCH_NAME} || pm2 start npm --name "nextjs-app-${BRANCH_NAME}" -- start
          EOF
